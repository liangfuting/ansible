#!/bin/bash

set -e

function get_vagrant_hosts {
    STATUS=`vagrant status | grep virtualbox | awk '{print $1}'`
    echo ${STATUS}
}

ACTION=$1
PROVIDER=${VAGRANT_DEFAULT_PROVIDER:-virtualbox}
TYPE=$2

if [[ -z ${TYPE} || -z ${ACTION} ]]; then
    echo "Usage: run_vagrant ACTION TYPE"
    echo "Where action is one of the following:"
    echo "- up: boot/provision the environment described by TYPE"
    echo "- provision: alias for up"
    echo "- destroy: destroy environment described by TYPE"
    echo "Where type is the one of the following:"
    for dir in $(ls -d envs/example/*/); do
        echo "- $(basename $dir)"
    done
    exit -1
else
    shift
    shift
fi

if [[ -d envs/example/${TYPE} ]]; then
  BOXES=$(grep -v '\[' envs/example/${TYPE}/hosts | sort | uniq)
else
    echo "I dont know how to provision '${TYPE}'"
    exit -1
fi

if [[ -e envs/example/${TYPE}/vagrant.yml ]]; then
    export SETTINGS_FILE=envs/example/${TYPE}/vagrant.yml
    mkdir -p .vagrant && cp envs/example/${TYPE}/vagrant.yml .vagrant/vagrant.yml
fi

if [[ ${ACTION} == "up" || ${ACTION} == "provision" ]]; then
    if [[ ${ACTION} == "up" ]]; then
        vagrant up --provider=${PROVIDER} ${BOXES} --no-provision
    fi
    # Write the Vagrant SSH config to be used by ansible
    TEMPFILE=".vagrant/${TYPE}.ssh"
    echo "# SSH config file for ${TYPE}" > ${TEMPFILE}
    for I in ${BOXES}; do
        vagrant ssh-config ${I} >> ${TEMPFILE}
    done

    export ANSIBLE_SSH_ARGS="${ANSIBLE_SSH_ARGS} -F ${TEMPFILE}"
    command="ursula --ursula-debug envs/example/${TYPE} site.yml --extra-vars @envs/example/vagrant.yml -s -u vagrant $@"
    echo running ${command}
    time ${command}
elif [[ ${ACTION} == "ssh" ]]; then
    vagrant ssh $@
elif [[ ${ACTION} == "destroy" ]]; then
    vagrant destroy -f ${BOXES}
else
    vagrant ${ACTION} $@
fi

