---
- name: create heat user
  user: name=heat comment=heat shell=/bin/false system=yes home=/nonexistent
        createhome=no

- name: create heat environment.d directory
  file: dest=/etc/heat/environment.d state=directory

- name: create heat log directory
  file: dest=/var/log/heat state=directory mode=0755 owner=heat

- name: install heat services
  upstart_service: name={{ item }}
                   user=heat
                   cmd=/usr/local/bin/{{ item }}
  with_items:
    - heat-api
    - heat-api-cfn
    - heat-engine

- name: heat config
  template: src=etc/heat/{{ item }} dest=/etc/heat/{{ item }} mode=0644
  with_items:
    - heat.conf
    - policy.json
    - api-paste.ini
  notify:
    - restart heat services

- name: stop heat services before db sync
  service: name={{ item }} state=stopped
  when: database_create.changed or force_sync|default('false')|bool
  with_items:
    - heat-api
    - heat-api-cfn
    - heat-engine

- name: sync heat database
  command: heat-manage db_sync
  when: database_create.changed or force_sync|default('false')|bool
  run_once: true
  changed_when: true
  notify:
    - restart heat services
  # we want this to always be changed so that it can notify the service restart

- meta: flush_handlers

- name: start heat services
  service: name={{ item }} state=started
  with_items:
    - heat-api
    - heat-api-cfn
    - heat-engine

- include: monitoring.yml tags=monitoring,common

- include: logging.yml
  tags:
    - logrotate
    - logging
